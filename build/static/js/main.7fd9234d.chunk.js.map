{"version":3,"sources":["containers/QuizItem.js","containers/QuizListView.js","containers/Answer.js","containers/Question.js","containers/QuizDetailView.js","auth/Login.js","common/RedirectRoute.js","common/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["QuizItem","score","label","to","this","props","quiz","slug","className","style","width","button","quiztakers_set","completed","correct_answers","questions_count","onClick","reset","name","description","React","Component","QuizListView","state","quizzes","redirect","config","headers","token","resetQuiz","id","e","axios","post","then","res","catch","err","console","log","new_state","find","obj","index","setState","get","data","href","role","map","key","Answer","ooc","answer","type","question","htmlFor","text","Question","data-id","answer_set","QuizDetailView","arrayLength","activeQuestion","activeOption","optionOnChange","sendResponse","quiztaker","body","JSON","stringify","submit","quizSlug","match","params","response","_next","x","document","getElementById","toString","parseInt","dataset","_prev","question_set","length","visibility","Login","username","password","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","onSubmit","preventDefault","setAuthenticated","onChange","target","value","placeholder","required","autoFocus","RedirectRoute","component","rest","auth","render","isAuthenticated","location","search","redirectRoute","split","PrivateRoute","loading","pathname","App","getCookie","ca","i","c","charAt","substring","indexOf","checkCookie","exact","path","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fd9234d.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport { Link } from 'react-router-dom';\nclass QuizItem extends React.Component {\n\n    render() {\n        let score = \"\";\n        let label = (<Link to={`/quizzes/${this.props.quiz.slug}`} className=\"btn btn-primary d-block\" style={{width:\"auto\"}}>Start Quiz</Link>);\n        let button = \"\";\n        if(this.props.quiz.quiztakers_set){\n        if(this.props.quiz.quiztakers_set.completed){\n                score = (this.props.quiz.quiztakers_set.correct_answers/this.props.quiz.questions_count) * 100\n                button = this.props.quiz.quiztakers_set.completed ? (<button onClick={() => this.props.reset(this.props.quiz.slug)}>Reset Quiz</button>) : \"\"\n                label = (<h5>Score: {score}%</h5>) \n            }\n        }\n         \n                return (\n            <Fragment>\n                <div className=\"card\">\n                  <div className=\"card-body text-left\">\n                        <div className=\"card-title d-inline-block mb-0\"><h1>{this.props.quiz.name}</h1></div>\n                        <div className=\"card-text d-inline-block ml-3\">Description: {this.props.quiz.description} <span className=\"ml-3\">Questions Count: {this.props.quiz.questions_count}</span></div>\n                        {label}\n                        {button}\n                  </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default QuizItem;\n","import React, { Fragment } from 'react';\nimport axios from 'axios';\nimport './quiz-list.css';\nimport QuizItem from './QuizItem';\n\nconst API_URL = 'http://127.0.0.1:8000/api/quizzes/'\n\nclass QuizListView extends React.Component {\n    state = {\n        quizzes: null,\n        redirect: false\n    };\n    config = () => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': `Token ${this.props.token}`\n            }\n        }\n        return config;\n    };\n\n\n\n\n    resetQuiz = (slug, id, e) => {\n        axios\n            .post(`http://127.0.0.1:8000/api/quizresult/${slug}/`, null, this.config())\n            .then(res => {\n\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n\n        let new_state = this.state.quizzes\n\n        var result = new_state.find((obj, index) => {\n            if (obj.slug === slug) {\n                new_state[index].quiztakers_set.completed = false\n            }\n        })\n\n\n        this.setState({\n            quizzes: new_state\n        })\n    };\n\n\n    componentDidMount() {\n        axios.get(`${API_URL}`, this.config())\n            .then(res => {\n                this.setState({\n                    quizzes: res.data\n                });\n                console.log(res.data);\n            })\n    };\n\n    render() {\n        if (!this.state.quizzes) {\n            return <div></div>\n        }\n        return (\n            <Fragment>\n                <nav className=\"navbar fixed-top navbar-light bg-light\">\n                    <span className=\"navbar-brand mb-0 h1\">Quiz Application</span>\n\n                    <a href='http://127.0.0.1:8000/admin/'> Admin</a>\n                </nav>\n\n\n                <main role=\"main\" className=\"container\">\n                    {this.state.quizzes.map((quiz, index) => {\n                        return <QuizItem key={index} reset={this.resetQuiz} quiz={quiz} />\n                    }\n                    )\n                    }\n                </main>\n            </Fragment >\n        );\n    }\n}\n\nexport default QuizListView;\n","import React from 'react';\n\nclass Answer extends React.Component {\n    render() {\n        return (\n            <div>\n                <input onClick={() => this.props.ooc(this.props.answer.id)} type=\"radio\" name={this.props.answer.question} />\n                <label htmlFor={this.props.id}>{this.props.answer.text}</label>\n            </div>\n        )\n    }\n}\n\nexport default Answer;","import React, { Fragment } from 'react';\nimport Answer from './Answer';\n\nclass Question extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <h1 id={`${this.props.id} question`} data-id={this.props.question.id}>{this.props.question.label}</h1>\n                {this.props.question.answer_set.map((answer, index) => {\n                    return <Answer ooc={this.props.ooc} key={index} answer={answer} />\n                }\n                )\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default Question;","import React, { Fragment } from 'react';\nimport axios from 'axios';\nimport Question from './Question';\nimport { Redirect } from 'react-router-dom';\nconst API_URL = 'http://127.0.0.1:8000/api/quizzes/'\n\nclass QuizDetailView extends React.Component {\n\n    state = {\n        quiz: null,\n        arrayLength: 0,\n        activeQuestion: 0,\n        activeOption: null\n    }\n    config = () => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': `Token ${this.props.token}`\n            }\n        }\n        return config;\n    };\n\n    componentDidMount() {\n        const quizSlug = this.props.match.params.slug;\n\n        axios.get(`${API_URL}${quizSlug}/`, this.config())\n            .then(res => {\n                this.setState({\n                    quiz: res.data.quiz,\n                    arrayLength: res.data.quiz.question_set.length\n                });\n                console.log(res.data)\n            })\n    };\n\n    optionOnChange = (id) => {\n        this.setState({\n            activeOption: id\n        })\n    };\n\n    sendResponse = (quiztaker, question, answer) => {\n        const body = JSON.stringify({ quiztaker, question, answer });\n        axios\n            .post(`http://127.0.0.1:8000/api/response/`, body, this.config())\n            .then(res => {\n                console.log(res.data)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    submit = (quiztaker, question, answer) => {\n        const quizSlug = this.props.match.params.slug;\n        const body = JSON.stringify({ quiztaker, question, answer });\n\n        axios\n            .post(`http://127.0.0.1:8000/api/quizzes/${quizSlug}/`, body, this.config())\n            .then(res => {\n                this.setState({\n                    quiz: res.data.quiz\n                })\n            })\n            .catch(err => {\n                console.log(err.response.data);\n            });\n    };\n\n    _next = () => {\n\n        let x = document.getElementById(this.state.activeQuestion.toString() + \" question\");\n        let question = parseInt(x.dataset.id);\n        let answer = this.state.activeOption\n        if (answer !== null && this.state.activeOption !== this.state.arrayLength - 1) {\n            this.sendResponse(this.state.quiz.quiztakers_set.id, question, answer);\n        }\n\n        if (!this.state.activeQuestion === this.state.arrayLength - 1) {\n            this.setState({\n                activeQuestion: this.state.activeQuestion + 1,\n                activeOption: null\n            })\n        } else {\n            this.submit(this.state.quiz.quiztakers_set.id, question, answer);\n        }\n    };\n    _prev = () => {\n        if (!this.state.activeQuestion === 0) {\n            let x = document.getElementById(this.state.activeQuestion.toString() + \" question\");\n            let question = parseInt(x.dataset.id);\n            let answer = this.state.activeOption\n            if (answer !== null) {\n                this.sendResponse(this.state.quiz.quiztakers_set.id, question, answer);\n            }\n\n        }\n        this.setState({\n            activeQuestion: this.state.activeQuestion - 1,\n            answer: null\n        })\n    };\n\n    render() {\n        if (this.state.quiz == null) {\n            return <div />\n        }\n        if (this.state.quiz.quiztakers_set.completed === true) {\n            return <Redirect to=\"/quizzes\" />\n        }\n        let label = this.state.activeQuestion === this.state.arrayLength - 1 ? \"Submit\" : \"Next\"\n\n        return (\n            <Fragment>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {this.state.quiz.question_set.map((question, index) => {\n                            let visibility = this.state.activeQuestion === index ? \"d-block\" : \"d-none\"\n                            return <div key={index} className={`col-lg-5 col-md-6 col-sm-8 col-12 mx-auto ${visibility}`}><div className=\"card\"><form><Question ooc={this.optionOnChange} question={question} id={index} /></form></div></div>\n                        }\n                        )\n                        }\n                    </div>\n                </div>\n                <button onClick={() => this._prev()}>Previous</button><button onClick={() => this._next()}>{label}</button>\n            </Fragment>\n        )\n    }\n}\n\nexport default QuizDetailView;","import React, { Component } from 'react';\nimport './login.css'; // CSS STYLING\n// import BaseRouter from './routes';\n// import CustomLayout from './containers/Layout';\nimport axios from 'axios';\n\nclass Login extends Component {\n\tstate = {\n\t\tusername: \"\",\n\t\tpassword: \"\"\n\t};\n\n\tsetCookie = (cname, cvalue, exdays) => {\n\t\tvar d = new Date();\n\t\td.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n\t\tvar expires = \"expires=\" + d.toUTCString();\n\t\tdocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n\t};\n\n\tonSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n\t\t\t}\n\t\t};\n\n\t\tconst body = JSON.stringify({\n\t\t\tusername: this.state.username,\n\t\t\tpassword: this.state.password\n\t\t});\n\n\t\taxios.post('http://127.0.0.1:8000/api/auth/login', body, config)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data)\n\t\t\t\tif (res.data.token) {\n\t\t\t\t\tthis.setCookie(\"atn\", res.data.token, 365)\n\t\t\t\t\tthis.props.setAuthenticated()\n\t\t\t\t}\n\t\t\t})\n\n\t};\n\tonChange = e => this.setState({ [e.target.name]: e.target.value });\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"form-signin\">\n\t\t\t\t<h1 className=\"h3 mb-3 font-weight-normal\">QUIZ MANIA</h1>\n\n\t\t\t\t<label htmlFor=\"inputUsername\" className=\"sr-only\">Username</label>\n\t\t\t\t<input type=\"text\" name=\"username\" onChange={(e) => this.onChange(e)} id=\"inputUsername\" className=\"form-control\" placeholder=\"Username\" required autoFocus />\n\t\t\t\t<label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n\t\t\t\t<input type=\"password\" onChange={(e) => this.onChange(e)} name=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required />\n\t\t\t\t<button className=\"btn btn-lg btn-primary btn-block\" onClick={(e) => this.onSubmit(e)} type=\"submit\">Sign in</button>\n\t\t\t\t<p className=\"mt-5 mb-3 text-muted\">&copy;AmitY</p>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst RedirectRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (rest.isAuthenticated) {\n        if (props.location.search !== \"\") {\n          let redirectRoute = props.location.search.split(\"?next=\")[1];\n          return <Redirect to={redirectRoute} />;\n        }\n        return <Redirect to=\"/quizzes\" />;\n      }\n\n      else {\n        return <Component {...props} setAuthenticated={rest.setAuthenticated} />;\n      }\n    }}\n  />\n);\nexport default RedirectRoute;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nfunction PrivateRoute({ component: Component, auth, loading, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!rest.isAuthenticated) {\n          if (props.location.pathname === \"/account/logout\") {\n            return <Redirect to=\"/\" />;\n          } else {\n            return (\n              <Redirect to={`/?next=${props.location.pathname}`} />\n            );\n          }\n        } else {\n          return <Component {...props} token={rest.token} />;\n        }\n      }\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport 'antd/dist/antd.css'; // CSS STYLING\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport QuizListView from './containers/QuizListView';\nimport QuizDetailView from './containers/QuizDetailView';\nimport Login from './auth/Login';\nimport RedirectRoute from './common/RedirectRoute'\nimport PrivateRoute from './common/PrivateRoute'\n\n\n// import axios from 'axios';\n// import { Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  state = {\n    isAuthenticated: null,\n  };\n\n  getCookie = (cname) => {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return null;\n  };\n\n  setAuthenticated = () => {\n    this.setState({\n      isAuthenticated: true\n    })\n  }\n\n  componentDidMount() {\n    let checkCookie = this.getCookie(\"atn\")\n    this.setState({\n      isAuthenticated: checkCookie == null ? null : true,\n      token: checkCookie\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <RedirectRoute isAuthenticated={this.state.isAuthenticated} exact path='/' component={Login} setAuthenticated={this.setAuthenticated} />\n          <PrivateRoute token={this.state.token} isAuthenticated={this.state.isAuthenticated} exact path='/quizzes' component={QuizListView} />\n          <PrivateRoute token={this.state.token} isAuthenticated={this.state.isAuthenticated} exact path='/quizzes/:slug' component={QuizDetailView} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}